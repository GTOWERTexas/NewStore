@page "/admin/products/edit/{id:long}"
@page "/admin/products/create"
@inherits OwningComponentBase<IStoreRepository>

    <style>
        .div.validation-message {color: rgb(220, 53, 69); font-weight: 500}
    </style>
    <h3 class = "bg-@ThemeColor text-white text-center p-1">@TitleText a Product</h3>
    <EditForm Model = "Product" OnValidSubmit = "SaveProduct">
        <DataAnnotationsValidator/>
            @if (Product.ProductId != 0)
        {
            <div class = "form-group">
                <label>ID</label>
                <input class = "form-control" disabled value = "@Product.ProductId">
            </div>
        }
             <div class = "form-group">
                <label>Name</label>
               
                <InputText class = "form-control"  @bind-Value = "Product.Name"/>
            </div>
             <div class = "form-group">
                <label>Category</label>
                 
                <select @bind = "Product.CategoryId" class = "form-control">
                    @foreach (var item in Categories)
                   {
                       <option value  = "@item.Id">@item.Name</option>
                   }
                </select>
            </div>
             <div class = "form-group">
                <label>Price</label>
                
                <InputNumber class = "form-control"  @bind-Value = "Product.Price"/>
            </div>
             <div class = "form-group">
                <label>Composition</label>
                
                <InputText class = "form-control" @bind-Value = "Product.Composition"/>
                
            </div>
             <div class = "form-group">
                <label>Country</label>
               
                <InputText class = "form-control"  @bind-Value = "Product.Country"/>
            </div>
            <div class="form-check">
                        @if (Product.IsMan == true)
                        {
            <input class="form-check-input" type="checkbox" @bind-value="@Product.IsMan" id="flexCheckDefault" checked>
        }
        else
        {
              <input class="form-check-input" type="checkbox" @bind-value="@Product.IsMan" id="flexCheckDefault"  >
        }
      
                      <label class="form-check-label" for="flexCheckDefault">
                       Is Man
                      </label>
            </div>
            
             
              @if(Product.ProductId != 0)
              {

                 <div class = "form-group">
                      <label>Photo</label>
                 
                  <img src="images/BlazorImages/@(Product.ProductId).webp" class="img-fluid" style="width:auto;height:320px;" /> 
            </div>
        }
       
            
        <button type = "submit" class = "btn btn-@ThemeColor">Save</button>
        <NavLink class = "btn btn-outline-secondary" href = "/admin/products">Cancel</NavLink>
  
    </EditForm>

@code {
    public IStoreRepository Repository => Service;
    [Inject]
    public NavigationManager NavManager { get; set; }
    [Parameter]
    public long Id { get; set; } = 0;
    private IEnumerable<Category> Categories => Repository.Categories;
    public Product Product { get; set; } = new Product();
    protected override void OnParametersSet()
    {
        if (Id != 0)
        {
            Product = Repository.Products.Include(c => c.Category).FirstOrDefault(p=>p.ProductId == Id);
        }

    }
    public void SaveProduct()
    {
        if (Id == 0)
        {
            Repository.CreateProduct(Product);
        }
        else
        {
            Repository.SaveProduct(Product);
        }
        NavManager.NavigateTo("/admin/products");
    }
    public string ThemeColor => Id == 0 ? "primary" : "warning";
    public string TitleText => Id == 0 ? "Create" : "Edit";

  

}
